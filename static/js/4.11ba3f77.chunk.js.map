{"version":3,"sources":["Components/common/FormsControls/FormsControls.jsx","Components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","hoc/withAuthRedirect.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Components/Login/Login.module.css","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/Profile.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/MyPosts/Post/Post.tsx","Components/Profile/MyPosts/MyPostsForm.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.tsx","Components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","Components/Profile/ProfileInfo/ProfileDataForm.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"names":["FormControl","input","meta","props","child","element","hasError","touched","error","className","s","formControl","children","Textarea","restProps","Input","createField","placeholder","name","validators","component","text","validate","module","exports","required","value","maxLengthCreator","maxLength","length","mapStateToPropsRedirect","state","isAuth","auth","WithAuthRedirect","Component","RedirectComponent","this","to","React","connect","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","TypeError","Post","message","item","src","alt","min","max","rand","Math","random","round","randomInteger","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","postForm","Field","MyPosts","memo","postsElements","profilePage","postData","map","p","key","id","post","postsArea","onAddPost","newPostText","posts","mapDispatchToProps","MyPostsContainer","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","statusText","onDoubleClick","onChange","e","currentTarget","onBlur","updateStatus","autoFocus","ProfileDataFormRedux","profile","style","formSummaryError","type","lookingForAJobDescription","keys","contacts","contact","ProfileData","isOwner","goToEditMode","onClick","loginText","fullName","loginArea","lookingForAJob","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","toggleLoader","descriptionBlock","photos","small","large","loadImg","target","files","initialValues","formData","then","Profile","content","ProfileContainer","userId","match","params","authorisedUserId","history","getProfile","getStatus","refreshProfile","prevProps","prevState","snapShot","compose","withRouter"],"mappings":"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","file":"static/js/4.11ba3f77.chunk.js","sourcesContent":["import React from 'react'\r\nimport s from './FormsControls.module.css'\r\nimport { Field } from 'redux-form'\r\n\r\nconst FormControl = ({input, meta, child, element, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n            <div>\r\n                {props.children}  \r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n               /> {text} \r\n    </div>\r\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1nzQ6\",\"error\":\"FormsControls_error__2Efp-\"};","export const required = value => {\r\n    if(value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => {\r\n    return (value) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined \r\n     }\r\n }\r\n","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nlet mapStateToPropsRedirect = (state) => {\r\n    return {\r\n      isAuth: state.auth.isAuth\r\n    }\r\n  }\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to={'/login'} />\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectwithRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent)\r\n\r\n    return ConnectwithRedirectComponent\r\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logArea\":\"Login_logArea__2ZAxu\",\"formSummaryError\":\"Login_formSummaryError__3flED\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2sLo1\",\"toggleLoader\":\"ProfileInfo_toggleLoader__x4QS0\",\"statusText\":\"ProfileInfo_statusText__38G9m\",\"lookingForAJob\":\"ProfileInfo_lookingForAJob__3pI0U\",\"loginArea\":\"ProfileInfo_loginArea__2oj-h\",\"loadImg\":\"ProfileInfo_loadImg__3o4WS\",\"loginText\":\"ProfileInfo_loginText__7Y5Is\",\"contact\":\"ProfileInfo_contact__2ycss\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__1XTKS\",\"item\":\"MyPosts_item__3DkZq\",\"postsArea\":\"MyPosts_postsArea__39i1h\",\"posts\":\"MyPosts_posts__1QIEm\",\"postForm\":\"MyPosts_postForm__3UqP_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__3-H5Z\",\"item\":\"Profile_item__IG6-d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Post_content__2lxYV\",\"item\":\"Post_item__WEA5X\"};","import React from 'react'\r\nimport s from './Post.module.css'\r\n\r\nfunction randomInteger(min: number, max: number) {\r\n  let rand = min + Math.random() * (max - min);\r\n  return Math.round(rand);\r\n}\r\n\r\ntype PropsType = {\r\n  message: string\r\n}\r\n\r\nconst Post: React.FC<PropsType> = ({message}) => {\r\n    return (\r\n          <div>\r\n            <div className={s.item}>\r\n              <div><img src='https://sun1-20.userapi.com/h_A94i1wqiwgzB9lYAKmozthon2TOK0FFELXKA/niOkBfdhZ5o.jpg' alt='ava'></img></div>\r\n              {message}\r\n              <div> Like {randomInteger(1, 9)}</div>\r\n            </div>\r\n          </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { required, maxLengthCreator } from './../../../utils/validators/validators'\r\nimport { Textarea } from './../../common/FormsControls/FormsControls'\r\nimport s from './MyPosts.module.css'\r\n\r\nlet maxLength = maxLengthCreator(20)\r\n\r\nconst AddNewPostForm = props => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className={s.postForm}>\r\n    <Field component={Textarea} name={'newPostText'} placeholder={'Add Post'} validate={[required, maxLength]}/>\r\n    <div><button>Add Post</button></div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: 'addNewPost'})(AddNewPostForm)\r\n\r\nexport default AddNewPostFormRedux","import React from 'react'\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport AddNewPostFormRedux from './MyPostsForm'\r\n\r\nconst MyPosts = React.memo (props => {\r\n  let state = props.profilePage\r\n\r\n  let postsElements = state.postData.map(p => {\r\n    return (\r\n      <Post key={p.id} message={p.post} id={p.id}/>\r\n    )\r\n  })\r\n\r\n  let addNewPost = (value) => {\r\n    props.onAddPost(value.newPostText)\r\n  }\r\n\r\n    return (\r\n        <div className={s.postsArea}>\r\n          <span>My Posts</span>\r\n          <AddNewPostFormRedux onSubmit={addNewPost}/>\r\n          <div className={s.posts}>\r\n          {postsElements}\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n)\r\n\r\n\r\n\r\nexport default MyPosts","import {onAddPost} from '../../../redux/profileReducer'\r\nimport MyPosts from './MyPosts'\r\nimport { connect } from 'react-redux'\r\nimport { AppStateType } from '../../../redux/redux-store'\r\n\r\ntype MapStateType = {\r\n  profilePage: object\r\n}\r\n\r\ntype MapDispatchType = {\r\n  onAddPost: (newPostText: string) => void\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateType => {\r\n  return {\r\n    profilePage: state.profilePage,\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps: MapDispatchType = {\r\n  onAddPost\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","import React, {useState} from 'react'\r\nimport { useEffect } from 'react'\r\nimport s from './ProfileInfo.module.css'\r\n\r\nconst ProfileStatusWithHooks = (props: any) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e: any) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n        return (\r\n            <div>\r\n                {!editMode &&\r\n                <div className={s.statusText}>\r\n                    Status: <span onDoubleClick={activateEditMode}>{props.status || 'My Status'}</span>\r\n                </div>\r\n                }\r\n                {editMode && \r\n                    <div>\r\n                        <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status}></input>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from 'react'\r\nimport { createField, Input, Textarea } from '../../common/FormsControls/FormsControls'\r\nimport { reduxForm } from 'redux-form'\r\nimport s from './ProfileInfo.module.css'\r\nimport style from './../../Login/Login.module.css'\r\n\r\nconst ProfileDataForm = ({profile, handleSubmit, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n    {error && <div className={style.formSummaryError}>{error}</div>}\r\n    <div><button >Save</button></div>\r\n    <div><span>Full Name:</span> {createField('Name', 'fullName', [], Input)}</div>\r\n    <div><span>Looking for a Job: </span> {createField('', 'lookingForAJob', [], Input, {type: 'checkbox'})}</div>\r\n    <div><span>Professional Skills: </span> {profile.lookingForAJobDescription} {createField('Professional Skills', 'lookingForAJobDescription', [], Textarea)}</div>\r\n    <div><span>About Me:</span> {createField('About Me', 'aboutMe', [], Textarea)}</div>\r\n    <div><span>Contacts:</span> {Object.keys(profile.contacts).map(key => {\r\n        return <div key={key} className={s.contact}>\r\n            <b>{key}: {createField(key, 'contacts.' + key, [], Input)}</b>\r\n        </div>\r\n    })}</div>\r\n</form>\r\n}\r\n\r\nconst ProfileDataFormRedux = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormRedux","import React, { useState } from 'react'\r\nimport s from './ProfileInfo.module.css'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\r\nimport ProfileDataFormRedux from './ProfileDataForm'\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    if(!profile) {\r\n        return <img src='https://брайтфит.рф/style/images/i-loader.png' alt='sd' className={s.toggleLoader}/>\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if(e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(() => {\r\n            setEditMode(false) \r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n        <div className={s.descriptionBlock}>\r\n            <img src={profile.photos.small ? profile.photos.large : 'https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/768px-Circle-icons-profile.svg.png'} alt='img'/>\r\n            <div className={s.loadImg}>{isOwner && <input type={'file'} onChange={onMainPhotoSelected}/>}</div>\r\n            {editMode ? <ProfileDataFormRedux initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                      : <ProfileData goToEditMode={() => {setEditMode(true)}} profile={profile} isOwner={isOwner}/>}\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n            {isOwner && <div><button onClick={goToEditMode}>Edit Profile</button></div>}\r\n            <div className={s.loginText}>{profile.fullName ? profile.fullName : 'Name'}</div>\r\n            <div className={s.loginArea}><span>Looking for a Job:</span> {profile.lookingForAJob ? profile.lookingForAJob : 'No'}</div>\r\n            <div className={s.loginArea}><span>Professional Skills:</span> {profile.lookingForAJobDescription ? profile.lookingForAJobDescription : 'No'}</div>\r\n            <div className={s.loginArea}><span>About Me:</span> {profile.aboutMe ? profile.aboutMe : 'None'}</div>\r\n            <div className={s.loginArea}><span>Contacts:</span> {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            })}</div>\r\n    </div>\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\nreturn <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo","import React from 'react'\r\nimport s from './Profile.module.css'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\n\r\nconst Profile = props => {\r\n    return (\r\n        <div className={s.content}>\r\n        <ProfileInfo \r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n        isOwner={props.isOwner}\r\n        savePhoto={props.savePhoto}\r\n        saveProfile={props.saveProfile}/>\r\n        <MyPostsContainer />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport Profile from './Profile'\r\nimport {getProfile, getStatus, updateStatus, savePhoto, saveProfile} from './../../redux/profileReducer'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { WithAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport { compose } from 'redux'\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n      let userId = this.props.match.params.userId\r\n      if(!userId) {\r\n        userId = this.props.authorisedUserId\r\n        if(!userId) {\r\n          this.props.history.push('/login')\r\n        }\r\n      }\r\n      this.props.getProfile(userId)\r\n      this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapShot) {\r\n      if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n        this.refreshProfile()\r\n      }\r\n    }\r\n\r\n    render () {\r\n      return (\r\n        <Profile\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        isOwner={!this.props.match.params.userId}\r\n        savePhoto={this.props.savePhoto}/>\r\n    )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorisedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = {\r\n  getProfile,\r\n  getStatus,\r\n  updateStatus,\r\n  savePhoto,\r\n  saveProfile\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  WithAuthRedirect,\r\n  withRouter\r\n)(ProfileContainer)"],"sourceRoot":""}