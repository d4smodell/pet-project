{"version":3,"sources":["redux/authReducer.js","serviceWorker.js","redux/appReducer.js","redux/redux-store.js","Components/Header/Header.jsx","Components/Header/HeaderContainer.jsx","Components/Navbar/Navbar.jsx","App.js","index.js","Components/Header/Header.module.css","Components/Users/Users.module.css","api/api.js","redux/profileReducer.js","redux/dialogsReducer.js","utils/objectHelpers.js","redux/usersReducer.js","Components/Navbar/Navbar.module.css"],"names":["initialState","id","email","login","isAuth","isFetching","captchaUrl","setUserData","type","payload","getCaptchaUrlSuccess","getData","dispatch","a","authAPI","me","data","resultCode","password","rememberMe","captcha","getCaptchaUrl","message","messages","length","stopSubmit","_error","securityAPI","url","logout","authReducer","state","action","Boolean","window","location","hostname","match","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","usersPage","usersReducer","auth","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Header","props","className","s","header","to","src","alt","loginBlock","onClick","loginButton","HeaderContainer","this","React","Component","mapDispatchToProps","connect","Navbar","nav","item","activeClassName","active","Login","lazy","UsersContainer","ProfileContainer","DialogsContainer","App","initializeApp","fallback","toggleLoader","path","render","promise","Promise","all","then","AppContainer","withRouter","MainApp","rerenderEntireTree","ReactDOM","document","getElementById","getState","subscribe","navigator","serviceWorker","ready","registration","unregister","module","exports","instance","axios","withCredentials","baseURL","headers","profileAPI","getProfile","userId","get","response","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","usersAPI","getUsers","currentPage","pageSize","follow","u","post","unfollow","delete","postData","onAddPost","newPostText","setUsersProfile","setStatus","file","savePhotoSuccess","photos","newPost","filter","p","dialogsData","name","messagesData","sendMessageCreator","newMessageBody","updateObjectInArray","items","itemId","objPropName","newObjProps","map","usersData","totalUsersCount","followingInProgress","followSuccess","unfollowSuccess","setUsers","setCurrentPage","setTotalUsersCount","count","toggleIsFetching","toggleIsFollowingProgress","getUsersThunkCreator","totalCount","changeUsers","pageNumber","followUnfollowFlow","apiMethod","actionCreator","bind","followed"],"mappings":"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","file":"static/js/main.2460a2cd.chunk.js","sourcesContent":["import {authAPI, securityAPI} from './../api/api'\r\nimport {stopSubmit} from 'redux-form'\r\n\r\nconst SET_USER_DATA = 'SET-USER-DATA'\r\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS'\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    isFetching: false,\r\n    captchaUrl: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type) { \r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const setUserData = (id, email, login, isAuth) => ({type: SET_USER_DATA, payload: {id, email, login, isAuth}})\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}})\r\n\r\nexport const getData = () => async (dispatch) => {\r\n        let data = await authAPI.me()\r\n            if (data.resultCode === 0) {\r\n                let {id, email, login} = data.data\r\n                dispatch(setUserData(id, email, login, true))\r\n            }\r\n    }\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let data = await authAPI.login(email, password, rememberMe, captcha) \r\n        if(data.resultCode === 0) {\r\n            dispatch(getData())\r\n        } else {\r\n            if(data.resultCode === 10) {\r\n                dispatch(getCaptchaUrl())\r\n            }\r\n            let message = data.messages.length > 0 ? data.messages[0] : 'Some Error'\r\n            dispatch(stopSubmit('login', {_error: message}))\r\n        }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const data = await securityAPI.getCaptchaUrl() \r\n    const captchaUrl = data.url\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let data = await authAPI.logout()\r\n        if(data.resultCode === 0) {\r\n            dispatch(setUserData(null, null, null, false))\r\n        }\r\n}\r\n\r\n\r\nexport default authReducer","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { getData } from './authReducer'\r\n\r\nconst INITIALIZING_SUCCESS = 'INITIALIZING_SUCCESS'\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case INITIALIZING_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        \r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZING_SUCCESS})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getData())\r\n    Promise.all([promise])\r\n    .then(() => {\r\n        dispatch(initializedSuccess())\r\n    })\r\n}\r\n\r\nexport default appReducer\r\n","import {createStore, combineReducers, applyMiddleware, compose} from 'redux'\r\nimport profileReducer from './profileReducer'\r\nimport dialogsReducer from './dialogsReducer'\r\nimport usersReducer from './usersReducer'\r\nimport authReducer from './authReducer'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from './appReducer'\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\n\r\nexport default store","import React from 'react'\r\nimport s from './Header.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst Header = props => {\r\n    return (\r\n        <header className={s.header}>\r\n        <NavLink to='/profile'><img src=\"https://lever-client-logos.s3.amazonaws.com/82f46ce7-ca84-49d4-ba9b-f233bcb0b0cf-1564438005067.png\" alt=\"logo\"/></NavLink>\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth\r\n            ?  <div>{props.login} <button onClick={props.logout}>Logout</button></div>\r\n            : <NavLink className={s.loginButton} to={'/login'}>Login</NavLink>}\r\n            \r\n        </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport Header from './Header'\r\nimport { logout } from '../../redux/authReducer'\r\nimport { connect } from 'react-redux';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = {\r\n    logout\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (HeaderContainer)","import React from 'react'\r\nimport s from './Navbar.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst Navbar = props => {\r\n    return (\r\n        <nav className={s.nav}>\r\n        <div className={s.item}><NavLink to='/profile' activeClassName={s.active}>Profile</NavLink></div>\r\n        <div className={s.item}><NavLink to='/dialogs' activeClassName={s.active}>Messages</NavLink></div>\r\n        <div className={s.item}><NavLink to='/news' activeClassName={s.active}>News</NavLink></div>\r\n        <div className={s.item}><NavLink to='/music' activeClassName={s.active}>Music</NavLink></div>\r\n        <div className={s.item}><NavLink to='/settings' activeClassName={s.active}>Settings</NavLink></div>\r\n        <div className={s.item}><NavLink to='/users' activeClassName={s.active}>Users</NavLink></div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React, { Suspense } from 'react';\nimport HeaderContainer from './Components/Header/HeaderContainer'\nimport Navbar from './Components/Navbar/Navbar'\nimport store from './redux/redux-store'\nimport s from './Components/Users/Users.module.css'\nimport {HashRouter, Route} from 'react-router-dom'\nimport {Provider} from 'react-redux'\nimport './App.css';\nimport { withRouter } from 'react-router-dom'\nimport { getData } from './redux/authReducer'\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { initializeApp } from './redux/appReducer'\n\nconst Login = React.lazy(() => import('./Components/Login/Login'))\nconst UsersContainer = React.lazy(() => import('./Components/Users/UsersContainer'))\nconst ProfileContainer = React.lazy(() => import('./Components/Profile/ProfileContainer')) \nconst DialogsContainer = React.lazy(() => import('./Components/Dialogs/DialogsContainer'))\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.initializeApp()\n}\n  render() {\n    if(!this.props.initialized) {\n      return <img className={s.toggleLoader} src='https://брайтфит.рф/style/images/i-loader.png' alt='load' />\n    }\n    return (\n      <HashRouter>\n        <div className='appWrapper'>\n        <HeaderContainer/>\n        <Navbar/>\n        <div className='appWrapperContent'>\n        <Suspense fallback={<img className={s.toggleLoader} src='https://брайтфит.рф/style/images/i-loader.png' alt='load' />}>\n        <Route path='/profile/:userId?' render={() => <ProfileContainer />}/>\n        <Route path='/dialogs' render={() => <DialogsContainer />}/>\n        <Route path='/users' render={() => <UsersContainer/>}/>\n        <Route path='/login' render={() => <Login/>}/>\n        </Suspense>\n        </div>\n      </div>\n      </HashRouter>\n    );\n  }\n}\n\nlet mapStateToProps = state => {\n  return {\n    initialized: state.app.initialized\n  }\n}\n\nlet mapDispatchToProps = {\n  getData,\n  initializeApp\n}\n\n\n\n\nlet AppContainer = compose(connect(mapStateToProps, mapDispatchToProps), withRouter)(App)\n\nlet MainApp = props => {\n  return <HashRouter>\n  <Provider store={store}>\n  <AppContainer />\n  </Provider>\n  </HashRouter>\n}\n\nexport default MainApp","import './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/redux-store'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainApp from './App';\n\nlet rerenderEntireTree = (state) => {\n    ReactDOM.render(<MainApp />, document.getElementById('root'));\n}\n\n\nrerenderEntireTree(store.getState())\n\nstore.subscribe(() => {\n    let state = store.getState()\n    rerenderEntireTree(state)\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__wgvoA\",\"loginBlock\":\"Header_loginBlock__1KRDJ\",\"loginButton\":\"Header_loginButton__3nAhT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"Users_photo__29I-G\",\"usersArea\":\"Users_usersArea__1-219\",\"selectedPage\":\"Users_selectedPage__2ZBkr\",\"counter\":\"Users_counter__1FTzh\",\"usersCount\":\"Users_usersCount__158Ay\",\"toggleLoader\":\"Users_toggleLoader__2VXpV\",\"paginator\":\"Users_paginator__2JN-l\",\"pageNumber\":\"Users_pageNumber__2VJvw\"};","import * as axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\"API-KEY\": \"3db790bc-68c8-44d6-839e-037f7aa28043\"}\r\n})\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status: status})\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n\r\n    savePhoto(photoFile) {\r\n        let formData = new FormData()\r\n        formData.append('image', photoFile)\r\n        return instance.put(`profile/photo/`, formData, {headers: {'Content-Type': 'multipart/form/data'}})\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile)\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const usersAPI = {\r\n    getUsers (currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    \r\n    follow (u) {\r\n        return instance.post(`follow/${u.id}`, {})\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    \r\n    unfollow (u) {\r\n        return instance.delete(`follow/${u.id}`, {})\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`)\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n}\r\n\r\n","import {profileAPI} from './../api/api'\r\nimport { stopSubmit } from 'redux-form'\r\n\r\nconst ADD_POST = 'ADD-POST'\r\nconst SET_USERS_PROFILE = 'SET-USERS-PROFILE'\r\nconst SET_STATUS = 'SET_STATUS'\r\nconst DELETE_POST = 'DELETE_POST'\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS'\r\n\r\nlet initialState = {\r\n        postData: [\r\n            {id: 1, post: 'PET_PROJECT'},\r\n            {id: 2, post: 'REACT-REDUX'},\r\n            {id: 3, post: 'POST'},\r\n            {id: 4, post: 'POST'},\r\n          ],\r\n        profile: null,\r\n        status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n      case ADD_POST: {\r\n        let newPost = {\r\n            id: 9, post: action.newPostText\r\n        }\r\n        return {\r\n            ...state, \r\n            postData: [...state.postData, newPost],\r\n        }\r\n    }\r\n        case SET_USERS_PROFILE:\r\n          return {...state, profile: action.profile}\r\n\r\n        case SET_STATUS:\r\n          return {...state, status: action.status}\r\n\r\n        case DELETE_POST:\r\n          return {...state, postData: state.postData.filter(p => p.id !== action.id)}\r\n\r\n        case SAVE_PHOTO_SUCCESS:\r\n          return {...state, profile: {...state.profile, photos: action.photos}}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const onAddPost = (newPostText) => ({type: ADD_POST, newPostText})\r\n\r\nexport const getProfile = (userId) => async (dispatch) => {\r\n    let data = await profileAPI.getProfile(userId)\r\n      dispatch(setUsersProfile(data))\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let data = await profileAPI.getStatus(userId)\r\n      dispatch(setStatus(data))\r\n  }\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let data = await profileAPI.updateStatus(status)\r\n      if(data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n      }\r\n  }\r\n\r\n  export const savePhoto = (file) => async (dispatch) => {\r\n    let data = await profileAPI.savePhoto(file)\r\n      if(data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(data.data.photos))\r\n      }\r\n  }\r\n\r\n  export const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId\r\n    let data = await profileAPI.saveProfile(profile)\r\n      if(data.resultCode === 0) {\r\n        dispatch(getProfile(userId))\r\n      } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: data.messages[0]}))\r\n      }\r\n  }\r\n\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\nexport const setUsersProfile = (profile) => ({type: SET_USERS_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = postId => ({type: DELETE_POST, postId})\r\nexport default profileReducer\r\n","const ADD_MESSAGE = 'ADD-MESSAGE'\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        {id: 1, name: 'User 1'},\r\n        {id: 2, name: 'User 2'},\r\n        {id: 3, name: 'User 3'},\r\n        {id: 4, name: 'User 4'},\r\n        {id: 5, name: 'User 5'},\r\n    ],\r\n    \r\n    messagesData: [\r\n      {id: 1, message: 'Fight Club'},\r\n      {id: 2, message: 'Shutter 2004'},\r\n      {id: 3, message: 'GTO'},\r\n      {id: 4, message: 'Rasen 1998'},\r\n      {id: 5, message: 'Black Lagoon'},\r\n    ],\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, {id: 9, message: action.newMessageBody}]\r\n            }\r\n\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => {\r\n    return {\r\n        type: ADD_MESSAGE,\r\n        newMessageBody\r\n    }\r\n}\r\n\r\nexport default dialogsReducer","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    items.map(u => {\r\n        if(u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u\r\n    })\r\n}","import {usersAPI} from './../api/api'\r\nimport { updateObjectInArray } from './../utils/objectHelpers'\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET-USERS'\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n    usersData: [],\r\n    pageSize: 7,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FOLLOW: \r\n            return {\r\n                ...state,\r\n                usersData: updateObjectInArray(state.usersData, action.userId, 'id', {followed: true})\r\n            }\r\n\r\n        case UNFOLLOW: \r\n            return {\r\n                ...state,\r\n                usersData: updateObjectInArray(state.usersData, action.userId, 'id,', {followed: false})\r\n            }\r\n\r\n        case SET_USERS:\r\n            return {...state, usersData: action.usersData}\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.count}\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {...state, followingInProgress: action.isFetching\r\n                 ? [...state.followingInProgress, action.userId]\r\n                 : [...state.followingInProgress.filter(id => id !== action.userId)]}\r\n        \r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (usersData) => ({type: SET_USERS, usersData})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleIsFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId})\r\n\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => async (dispatch) => {\r\n            dispatch(toggleIsFetching(true))\r\n            let data = await usersAPI.getUsers(currentPage, pageSize)\r\n            dispatch(setUsers(data.items))\r\n            dispatch(toggleIsFetching(false))\r\n            dispatch(setTotalUsersCount(data.totalCount))\r\n    }\r\n\r\nexport const changeUsers = (pageNumber, pageSize) => async (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        dispatch(setCurrentPage(pageNumber))\r\n        let data = await usersAPI.getUsers(pageNumber, pageSize)\r\n            dispatch(setUsers(data.items))\r\n            dispatch(toggleIsFetching(false))\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleIsFollowingProgress(true, userId))\r\n    let data = await apiMethod(userId)\r\n        if (data.resultCode === 0) {\r\n            dispatch(actionCreator(userId))\r\n        }\r\n        dispatch(toggleIsFollowingProgress(false, userId))\r\n}\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n}\r\n\r\n\r\nexport default usersReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3DSr-\",\"item\":\"Navbar_item__8tcFT\",\"active\":\"Navbar_active__jDnZs\"};"],"sourceRoot":""}